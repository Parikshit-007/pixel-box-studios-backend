# Generated by Django 5.1.4 on 2025-09-26 11:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='About section title', max_length=200)),
                ('description', models.TextField(help_text='About description')),
                ('story', models.TextField(help_text='Company story')),
                ('vision', models.TextField(help_text='Company vision')),
                ('mission', models.TextField(blank=True, help_text='Company mission')),
                ('values', models.JSONField(default=list, help_text='JSON array of company values')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'About Content',
                'verbose_name_plural': 'About Content',
            },
        ),
        migrations.CreateModel(
            name='ContactFormSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Contact person name', max_length=100)),
                ('email', models.EmailField(help_text='Contact email', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=20)),
                ('company', models.CharField(blank=True, help_text='Company name', max_length=100)),
                ('subject', models.CharField(blank=True, help_text='Message subject', max_length=200)),
                ('message', models.TextField(help_text='Message content')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Submission timestamp')),
                ('is_read', models.BooleanField(default=False, help_text='Whether the message has been read')),
            ],
            options={
                'verbose_name': 'Contact Form Submission',
                'verbose_name_plural': 'Contact Form Submissions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(help_text='Phone number', max_length=20)),
                ('email', models.EmailField(help_text='Email address', max_length=254)),
                ('address', models.TextField(help_text='Physical address')),
                ('social_links', models.JSONField(default=dict, help_text='JSON object with social media links')),
                ('business_hours', models.JSONField(default=dict, help_text='JSON object with business hours')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Information',
                'verbose_name_plural': 'Contact Information',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Feature title', max_length=200)),
                ('description', models.TextField(help_text='Feature description')),
                ('icon', models.CharField(help_text='Icon name or URL', max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Feature',
                'verbose_name_plural': 'Features',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_url', models.URLField(blank=True, help_text='URL for the hero video', max_length=500, null=True)),
                ('title', models.CharField(help_text='Main hero title', max_length=200)),
                ('subtitle', models.TextField(help_text='Hero subtitle/description')),
                ('cta_text', models.CharField(help_text='Call-to-action button text', max_length=100)),
                ('cta_link', models.URLField(help_text='Call-to-action button link', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Hero Section',
                'verbose_name_plural': 'Hero Section',
            },
        ),
        migrations.CreateModel(
            name='Navigation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_url', models.URLField(help_text='URL for the logo image', max_length=500)),
                ('menu_links', models.JSONField(default=list, help_text='JSON array of menu links with name and href')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Navigation',
                'verbose_name_plural': 'Navigation',
            },
        ),
        migrations.CreateModel(
            name='PortfolioProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Project title', max_length=200)),
                ('description', models.TextField(help_text='Project description')),
                ('media_url', models.URLField(help_text='Project media URL (image or video)', max_length=500)),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('gif', 'GIF')], default='image', help_text='Type of media', max_length=20)),
                ('tags', models.JSONField(default=list, help_text='JSON array of project tags')),
                ('client', models.CharField(blank=True, help_text='Client name', max_length=100)),
                ('project_url', models.URLField(blank=True, help_text='Project URL or demo link', max_length=500)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this project should be featured')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Portfolio Project',
                'verbose_name_plural': 'Portfolio Projects',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name (e.g., Animation, Marketing)', max_length=100, unique=True)),
                ('description', models.TextField(help_text='Category description')),
                ('icon', models.CharField(blank=True, help_text='Icon name or URL for the category', max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Stat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Stat title (e.g., 'Projects Completed')", max_length=200)),
                ('number', models.PositiveIntegerField(help_text='The statistic number')),
                ('suffix', models.CharField(blank=True, help_text="Suffix for the number (e.g., '+', '%', 'K')", max_length=10)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Statistic',
                'verbose_name_plural': 'Statistics',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Team member name', max_length=100)),
                ('role', models.CharField(help_text='Team member role/position', max_length=100)),
                ('bio', models.TextField(help_text='Team member bio')),
                ('image', models.URLField(help_text='Team member photo URL', max_length=500)),
                ('social_links', models.JSONField(default=dict, help_text='JSON object with social media links')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this team member should be featured')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Team Member',
                'verbose_name_plural': 'Team Members',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Customer name', max_length=100)),
                ('role', models.CharField(help_text='Customer role/position', max_length=100)),
                ('company', models.CharField(blank=True, help_text='Customer company', max_length=100)),
                ('review', models.TextField(help_text='Testimonial text')),
                ('photo', models.URLField(blank=True, help_text='Customer photo URL', max_length=500)),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5, help_text='Rating out of 5')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this testimonial should be featured')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Service title', max_length=200)),
                ('description', models.TextField(help_text='Service description')),
                ('features', models.JSONField(default=list, help_text='JSON array of service features')),
                ('icon', models.CharField(blank=True, help_text='Icon name or URL for the service', max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order within category')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this service should be featured')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='content.servicecategory')),
            ],
            options={
                'verbose_name': 'Service Item',
                'verbose_name_plural': 'Service Items',
                'ordering': ['category', 'order', 'title'],
            },
        ),
    ]
